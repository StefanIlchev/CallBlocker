buildscript {

	ext {
		localProperties = new Properties()
		def localPropertiesFile = file 'local.properties'
		if (localPropertiesFile.isFile()) {
			localPropertiesFile.withReader { localProperties.load it }
		}
	}

	repositories {
		google()
		mavenCentral()
		mavenLocal()
		maven { url 'https://jitpack.io' }
	}

	dependencies {
		classpath 'com.android.tools.build:gradle:7.3.1'
	}
}

apply {
	plugin 'com.android.application'
}

allprojects {

	repositories {
		google()
		mavenCentral()
		mavenLocal()
		maven { url 'https://jitpack.io' }
	}

	tasks.withType(JavaCompile).configureEach {
		options.deprecation = true
	}
}

android {
	compileSdk 33
	namespace 'ilchev.stefan.callblocker'

	compileOptions {
		sourceCompatibility JavaVersion.VERSION_17
		targetCompatibility JavaVersion.VERSION_17
	}

	defaultConfig {
		minSdk 28
		targetSdk compileSdk
		versionCode 10
		versionName "$versionCode"
	}

	applicationVariants.configureEach { variant ->
		variant.outputs.each {
			def fileName = it.outputFileName
			def name = fileName - ~/\.[^.]+$/
			it.outputFileName = "$name-$variant.versionName${fileName.substring name.length()}"
		}
	}

	signingConfigs {

		debug {
			storeFile file(localProperties.getProperty('storeFile') ?: 'debug.keystore')
			storePassword localProperties.getProperty('storePassword') ?: 'android'
			keyAlias localProperties.getProperty('keyAlias') ?: 'androiddebugkey'
			keyPassword localProperties.getProperty('keyPassword') ?: 'android'
		}
	}

	buildTypes {

		release {
			minifyEnabled true
			shrinkResources true
			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt')
			signingConfig signingConfigs.debug
		}
	}
}
